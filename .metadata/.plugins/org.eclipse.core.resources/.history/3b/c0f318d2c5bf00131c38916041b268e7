package com.spacebottle.controllers;

import com.example.spacebottle.MyHandler;
import com.example.spacebottle.R;
import com.microsoft.windowsazure.notifications.NotificationsManager;
import com.spacebottle.helper.SBAuthenticateCallback;
import com.spacebottle.models.Device;
import com.spacebottle.models.Devices;

import android.content.Context;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.Looper;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ProgressBar;

public class HomeActivity extends SBActivity implements LocationListener  {
	
	private Devices mDevices;
	private LocationManager mLocationManager;
	private Criteria mCriteria;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_home);
		setProgressBar((ProgressBar) findViewById(R.id.loadingProgressBar));
		hideProgressBar();
		NotificationsManager.handleNotifications(this, getString(R.string.sender_id), MyHandler.class);
		connect(new SBAuthenticateCallback(){

			@Override
			public void success() {
				initialize();
			}

			@Override
			public void error(Exception exception) {
				// TODO Auto-generated method stub
				
			}});
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		if (item.getItemId() == R.id.menu_refresh) {
			updateCurrentPosition();
		}
		
		return true;
	}
	private void initialize(){
		mDevices = new Devices(mClient);
		mDevices.add(new Device(MyHandler.getHandle()));
		
		mLocationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
		mCriteria = new Criteria();
		criteria.setAccuracy(Criteria.ACCURACY_COARSE); // í·ê∏ìx
		criteria.setPowerRequirement(Criteria.POWER_LOW); // í·è¡îÔìdóÕ
		


	}
	private void updateCurrentPosition(){
		mLocationManager.requestSingleUpdate(criteria, this, Looper.myLooper());
	}

	@Override
	public void onLocationChanged(Location location) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onProviderDisabled(String provider) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onProviderEnabled(String provider) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {
		// TODO Auto-generated method stub
		
	}
}
